#include <bits/stdc++.h>
TC: O(N*N)
SC: O(N)
vector<vector<int>> pairSum(vector<int> &arr, int s){
   vector<vector<int>> ans;
   sort(arr.begin(),arr.end());
   for(int i=0;i<arr.size()-1;i++)
   {
   
    for(int j=i+1;j<arr.size();j++)
    {
       if(arr[i]+arr[j]==s)
       {
          ans.push_back({arr[i],arr[j]});
       }

    }  

   }
   return ans;
}
*********************************************************************************************************************************************************************
Optimised Code:
#include <unordered_map>
 
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> mp;
       
        for(int i = 0; i < nums.size(); i++){
            if(mp.find(target - nums[i]) == mp.end())
                mp[nums[i]] = i;
            else
                return {mp[target - nums[i]], i};
        }
 
        return {-1, -1};
    }
};
