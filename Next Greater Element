/*
Time Complexity is O(N^2)
Space Complexity is O(1)
*/
#include <bits/stdc++.h> 

vector<int> nextGreater(vector<int> &arr, int n) {
    vector<int> ans;
    for(int i=0;i<n-1;i++)
    {
        int x=arr[i];
        bool flag=false;
        for(int j=i+1;j<n;j++)
        {
            if(arr[j]>x)
            {
                ans.push_back(arr[j]);
                flag=true;
                break;
            }
        }
        if (!flag)
        {
          ans.push_back(-1);
        }
    }
     ans.push_back(-1);
     return ans;
}
***********************************************************************************************************************************************************************


/*
    Time Complexity : O(N)
    Space Complexity : O(N)
    
    Where N is the length of the array.
*/

#include<stack>

vector<int> nextGreater(vector<int> &arr, int n) {
    vector<int> ans(n);

    stack<int> s;

    for (int i = n - 1; i >= 0; i--) {
        
        // We will pop the elements from the stack till we get the greater element 
        // Or stack become empty
        while (!s.empty() && s.top() <= arr[i]) {
            s.pop();
        }

        if (s.empty()) {
            ans[i] = -1;
        } 
        else {
            ans[i] = s.top();
        }

        s.push(arr[i]);
    }

    return ans;

}
