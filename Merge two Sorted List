/* Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 #include<bits/stdc++.h>
 #include<algorithm>
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        vector<int> ans;
      if(list1==NULL)
      return list2;
      else if(list2==NULL)
      return list1;
      else
      {
          while(list1!=NULL)
          {
              int tr1=list1->val;
              ans.push_back(tr1);
              list1=list1->next;
          }
           while(list2!=NULL)
          {
              int tr2=list2->val;
              ans.push_back(tr2);
              list2=list2->next;
          }
          sort(ans.begin(),ans.end());
        ListNode* values1=new ListNode(ans[0]);
        ListNode* head=values1;
        for(int i=1;i<ans.size();i++)
        {
            ListNode* temp=new ListNode(ans[i]);
            values1->next=temp;
            values1=temp;
        }
        return head;
      }
    }
};
